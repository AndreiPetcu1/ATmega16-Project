###############################################################################
#
# IAR C/C++ Compiler V8.10.2.1803/W64 for Microchip AVR   03/Jan/2025  13:51:45
# Copyright 1996-2023 IAR Systems AB.
# Evaluation license - IAR Embedded Workbench for Microchip AVR, Evaluation Version 8.10
#
#    Source file           =
#        C:\Users\ASUS\OneDrive\Desktop\SOC Proiect\functii.c
#    Command line          =
#        -f "C:\Users\ASUS\OneDrive\Desktop\SOC
#        Proiect\Debug\Obj\functii.r90.rsp"
#        ("C:\Users\ASUS\OneDrive\Desktop\SOC Proiect\functii.c" --cpu=m16 -mt
#        -o "C:\Users\ASUS\OneDrive\Desktop\SOC Proiect\Debug\Obj\\" -lC
#        "C:\Users\ASUS\OneDrive\Desktop\SOC Proiect\Debug\List\\" -lA
#        "C:\Users\ASUS\OneDrive\Desktop\SOC Proiect\Debug\List\\"
#        --initializers_in_flash --no_cse --no_inline --no_code_motion
#        --no_cross_call --no_clustering --no_tbaa --debug
#        -DENABLE_BIT_DEFINITIONS -e --eeprom_size 512 -On) --dependencies=n
#        "C:\Users\ASUS\OneDrive\Desktop\SOC
#        Proiect\Debug\Obj\functii.r90.iar_deps"
#    Locale                =  C
#    List file             =
#        C:\Users\ASUS\OneDrive\Desktop\SOC Proiect\Debug\List\\functii.lst
#    Object file           =
#        C:\Users\ASUS\OneDrive\Desktop\SOC Proiect\Debug\Obj\\functii.r90
#    Runtime model:           
#      __64bit_doubles     =  disabled
#      __architecture      =  *
#      __cpu               =  3
#      __cpu_name          =  ATmega16
#      __enhanced_core     =  enabled
#      __enhanced_core_mul =  enabled
#      __has_elpm          =  false
#      __memory_model      =  1
#      __mex               =  disabled
#      __rt_version        =  3
#      __vtable_memory     =  __tinyflash
#
###############################################################################


   \                                 In  segment CODE, align 2, keep-with-next
C:\Users\ASUS\OneDrive\Desktop\SOC Proiect\functii.c
      1          unsigned short par (unsigned short a)
   \                     par:
      2          {
      3            return a%2;
   \   00000000   2F20               MOV     R18, R16
   \   00000002   7021               ANDI    R18, 0x01
   \   00000004   E030               LDI     R19, 0
   \   00000006   0189               MOVW    R17:R16, R19:R18
   \   00000008   9508               RET
      4          }
      5          

   \                                 In  segment CODE, align 2, keep-with-next
      6          unsigned short calc(unsigned short a, unsigned short b)
   \                     calc:
      7          {
      8            return a+b;
   \   00000000   0F02               ADD     R16, R18
   \   00000002   1F13               ADC     R17, R19
   \   00000004   9508               RET
      9          }

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   calc
      2   par


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  calc
      10  par

 
 16 bytes in segment CODE
 
 16 bytes of CODE memory

Errors: none
Warnings: none
